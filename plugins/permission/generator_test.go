package main

import (
	"fmt"
	"github.com/dave/jennifer/jen"
	"testing"
)

func TestGenerateFile(t *testing.T) {
	f := jen.NewFile("userv2")
	f.PackageComment("// Code generated by protoc-gen-audit. DO NOT EDIT.")

	// Import required packages
	f.ImportAlias("github.com/irisco88/protos/gen/common/v1", "commonpb")
	// Generate MethodStreamInfo struct
	f.Type().Id("MethodStreamInfo").Struct(
		jen.Id("Roles").Index().Qual("github.com/irisco88/protos/gen/common/v1", "UserRole").Tag(map[string]string{"json": "roles"}),
		jen.Id("RPCName").String().Tag(map[string]string{"json": "rpc_name"}),
	)

	// Generate ServicePermission struct
	f.Type().Id("ServicePermission").Struct(
		jen.Id("ServiceName").String().Tag(map[string]string{"json": "service_name"}),
		jen.Id("MethodStreams").Map(jen.String()).Op("*").Id("MethodStreamInfo").Tag(map[string]string{"json": "method_streams"}),
	)

	// Generate UserServicePermissions variable
	f.Var().Id("UserServicePermissions").Op("=").Op("&").Id("ServicePermission").Values(jen.Dict{
		jen.Id("ServiceName"): jen.Lit("/user.v1.UserService"),
		jen.Id("MethodStreams"): jen.Map(jen.String()).Op("*").Id("MethodStreamInfo").Values(jen.Dict{
			jen.Lit("/user.v1.UserService/signup"): jen.Op("&").Id("MethodStreamInfo").Values(jen.Dict{
				jen.Id("RPCName"): jen.Lit("signup"),
				jen.Id("Roles"): jen.Index().Qual("github.com/irisco88/protos/gen/common/v1", "UserRole").Values(
					jen.Qual("github.com/irisco88/protos/gen/common/v1", "UserRole_USER_ROLE_NORMAL"),
					jen.Qual("github.com/irisco88/protos/gen/common/v1", "UserRole_USER_ROLE_READER"),
				),
			}),
		}),
	})

	// Add an empty variable assignment to avoid any unused variable errors
	f.Var().Id("_").Op("=").Id("UserServicePermissions")
	fmt.Printf("%#v\n", f)
}

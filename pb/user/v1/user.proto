syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";
import "common/v1/permission.proto";

service UserService {
  rpc SignIn(SignInRequest) returns (SignInResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/signin"
      body: "*"
    };
  }
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse){
    option (google.api.http) = {
      post: "/api/v1/user/createuser"
      body: "*"
    };
    option (common.v1.permission) = {
      roles:[USER_ROLE_ADMIN]
    };
  }
  rpc UpdateUser(UpdateUserRequest)returns(UpdateUserResponse){
    option (google.api.http) = {
      post: "/api/v1/user/updateuser"
      body: "*"
    };
    option (common.v1.permission) = {
      roles:[USER_ROLE_ADMIN, USER_ROLE_NORMAL]
    };
  }
  rpc UploadAvatar(stream UploadAvatarRequest) returns (UploadAvatarResponse){
    option (google.api.http) = {
      get: "/api/v1/user/uploadavatar"
    };
    option (common.v1.permission) = {
      roles:[USER_ROLE_ADMIN, USER_ROLE_NORMAL]
    };
  }
}

message User{
  uint32 id = 1;
  string first_name = 2;
  string last_name = 3;
  string user_name = 4;
  string email = 5;
  string password = 6;
  common.v1.UserRole role = 7;
  string profile_photo = 8;
}

message UpdateUserRequest{
  User user = 1;
}
message UpdateUserResponse{}

message SignInRequest {
  string user_name = 1;
  string password = 2;
}

message SignInResponse {
  string token = 1;
}

message CreateUserRequest{
  User user = 1;
}

message CreateUserResponse{
  uint32 user_id = 1;
}

message UploadAvatarRequest{
  oneof data {
    bytes chunk_data = 1;
    AvatarInfo photo_info = 2;
  }
}
message AvatarInfo {
  uint32 user_id = 1;
  string photo_type = 2;
}

message UploadAvatarResponse{
  uint32 size = 1;
  string photo_id = 2;
}